Hostname:
    - Returns the hostname of the machine.
    - in some cases, it can provide information about the target system's role 
        within a corporate network, e.g. "SQL-PROD-01" for a production SQL server.

uname -a:
    - Returns system information giving additional details about the kernel.
    - This will be useful when searching for any potential kernel vulnerabilities 
        that could lead to privilege escalation.

/proc/version:
    - File containing information about the target system processes.
    - Looking at /proc/version may give information on the kernel version and 
        additional data such as whether a compiler is installed.

/etc/issue:
    - File containing information about the operating system, but can easily be customized or changed.
    - Any file containing system information can be changed. For a clearer understanding of the system,
        it is always a good idea to look at all of these.

ps (Process Status):
    - Returns a list of running processes on the system.
    - The output will show the following:
        * PID:  The process ID.
        * TTY:  Terminal type used by the user.
        * Time: Amount of CPU time used by the process (Not the time the process have been running for)
        * CMD:  The command or executable running (Will not display any command line parameters)
    - Options:
        * ps -a:   View all running processes.
        * ps axjf: View process tree.
        * ps aux:  
            * Looking at this command output, we can have a better understanding of the system and potential vulnerabilities.
            - Show processes for all users (a)
            - Show the user that launched the process (u) 
            - Show the processes that are not attached to a terminal (x).

env:
    - Displays environmental variables.
    - The PATH variable may have a compiler or a scripting language (like Python) that could be used to run code on the target system 
        or leveranged for privilege escalation.

sudo -l:
    - Displays all commands a user can run with root privileges.

id:
    - Displays a general overview of a user's privilege level and group memberships.
    - This command can also be used to obtain the same information for another user:
        * id <username>

/etc/passwd:
    - Reading this file can be an easy way to discover users on the system.
    - Manually adding a user with the right data to this file, might be a way to escalate privileges.
    - The data in this file can also be used to create a wordlist for brute-force attacks.
    - This will return every user, including service users that would not be very useful, to only extract the "real" users, 
        we can grep for "home" since these users most likely have their folders under the "home" directory:
        * cat /etc/passwd | grep home 

history:
    - Returns a list of earlier commands executed by the user.
    - Analyzing this can give an idea about the target system and (though rarely) have stored information such as passwords and usernames.

ifconfig:
    - Returns information about the network interfaces of the system.

ip route:
    - Returns a list of network routes.

netstat:
    - Gather information on existing connections.
    - Options:
        - netstat -a: Show all listening ports and established connections.
        - netstat -at:  List running TCP protocols.
        - netstat -au:  List running UDP protocols.
        - netstat -l:   List ports in "listening" mode. These ports are open and ready to accept incomming connections.
        - netstat -lt:  List only ports that are listening using the TCP protocol.
        - netstat -s:   List network usage statistics by protocol. This can be supplemented with the -t or -u to limit output to a specific protocol.
        - netstat -tp:  List connections with the service name and PID info. This can be supplemented with a "l" to list listening open ports.
        - netstat -i:   List interface statistics.
        - netstat -ano: Display all sockets (a), do not resolve names (n), display timers (o).

find:
    - Used to locate files and directories in the file-system.
    - Examples:
        - find . -name file.txt:        Locates the file "file.txt" in the current directory.
        - find /home -name file.txt:    Locates the file "file.txt" in the home directory.
        - find / -type d -name config:  Locates the directory named config in the root (/) directory.
        - find / -type f -perm 0777:    Locates files with 777 permissions (Read, Write, Execute by all users) in the root directory.
        - find / -perm a=x:             Locates executable files in the root directory.
        - find /home -user mr_bean:     Locates all files the user "mr_bean" has in his home folder.
        - find / -mtime 10:             Locates files from the root directory that were modifies in the last 10 days.
        - find / -atime 10:             Locates files from the root directory that were accessed in the last 10 days.
        - find / -cmin -60:             Locates files from the root directory that has changed within the last hour.
        - find / -amin -60:             Locates files from the root directory that have been accessed within the last hour.
        - find / -size 50M:             Locates files from the root directory with a size of 50MB.
        - find / -size +50M:            Locates files from the root directory with a size larger than 50MB.
        - find / -size -50M:            Locates files from the root directory with a size lesser than 50MB.
        - find / -size -50M 2>/dev/null:    Locates files from the root directory with a size lesser than 50MB and redirects errors for a cleaner output.
    - Find world-wide folders and files that can be written to:
        - find / -writable -type d 2>/dev/null
        - find / -perm -222 -type d 2>/dev/null
        - find / -perm -o w -type d 2>/dev/null
        - find / -perm -o x -type d 2>/dev/null
    - Find development tools and supported languages:
        - find / -name perl*
        - find / -name python*
        - find / -name gcc*
    - Find specific file permissions:
        - find / -perm -u=s -type f 2>/dev/null:    Locates files with the SUID bit set, which allows us to run the file with a higher privilege 
                                                    level than the current user.